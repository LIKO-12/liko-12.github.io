"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1704],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>k});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=r.createContext({}),p=function(e){var t=r.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=p(a),k=n,m=d["".concat(s,".").concat(k)]||d[k]||u[k]||o;return a?r.createElement(m,l(l({ref:t},c),{},{components:a})):r.createElement(m,l({ref:t},c))}));function k(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,l=new Array(o);l[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:n,l[1]=i;for(var p=2;p<o;p++)l[p]=a[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}d.displayName="MDXCreateElement"},9354:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var r=a(7462),n=(a(7294),a(3905));const o={title:"State Stacks",sidebar_position:5},l=void 0,i={unversionedId:"graphics/state-stacks",id:"graphics/state-stacks",title:"State Stacks",description:"For backing up graphics states using stacks.",source:"@site/docs/graphics/state-stacks.md",sourceDirName:"graphics",slug:"/graphics/state-stacks",permalink:"/docs/graphics/state-stacks",draft:!1,editUrl:"https://github.com/LIKO-12/LIKO-12.github.io/tree/main/docs/docs/graphics/state-stacks.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{title:"State Stacks",sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Transformations",permalink:"/docs/graphics/transformations"},next:{title:"Querying Dimensions",permalink:"/docs/graphics/querying-dimensions"}},s={},p=[{value:"Coordinates (Geometry) Transformations Matrix Stack",id:"coordinates-geometry-transformations-matrix-stack",level:2},{value:"<code>pushMatrix</code>",id:"pushmatrix",level:3},{value:"<code>popMatrix</code>",id:"popmatrix",level:3},{value:"<code>clearMatrixStack</code>",id:"clearmatrixstack",level:3},{value:"Colors Mapping Stack",id:"colors-mapping-stack",level:2},{value:"<code>pushColor</code>",id:"pushcolor",level:3},{value:"<code>popColor</code>",id:"popcolor",level:3},{value:"Colors RGB Palette Stack",id:"colors-rgb-palette-stack",level:2},{value:"<code>pushPalette</code>",id:"pushpalette",level:3},{value:"<code>popPalette</code>",id:"poppalette",level:3}],c={toc:p};function u(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,r.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"For backing up graphics states using stacks."),(0,n.kt)("h2",{id:"coordinates-geometry-transformations-matrix-stack"},"Coordinates (Geometry) Transformations Matrix Stack"),(0,n.kt)("h3",{id:"pushmatrix"},(0,n.kt)("inlineCode",{parentName:"h3"},"pushMatrix")),(0,n.kt)("p",null,"Push the current active camera transformations to the MatrixStack."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-lua"},"pushMatrix()\n")),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"popmatrix"},(0,n.kt)("inlineCode",{parentName:"h3"},"popMatrix")),(0,n.kt)("p",null,"Pop the last cam transformations from the MatrixStack."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-lua"},"popMatrix()\n")),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"clearmatrixstack"},(0,n.kt)("inlineCode",{parentName:"h3"},"clearMatrixStack")),(0,n.kt)("p",null,"Clear the matrix stack (By calling ",(0,n.kt)("inlineCode",{parentName:"p"},"popMatrix()"),")."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-lua"},"clearMatrixStack()\n")),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"colors-mapping-stack"},"Colors Mapping Stack"),(0,n.kt)("h3",{id:"pushcolor"},(0,n.kt)("inlineCode",{parentName:"h3"},"pushColor")),(0,n.kt)("p",null,"Push the current active color to the ColorStack."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-lua"},"pushColor()\n")),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"popcolor"},(0,n.kt)("inlineCode",{parentName:"h3"},"popColor")),(0,n.kt)("p",null,"Pop the last active color from the ColorStack."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-lua"},"popColor()\n")),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"colors-rgb-palette-stack"},"Colors RGB Palette Stack"),(0,n.kt)("h3",{id:"pushpalette"},(0,n.kt)("inlineCode",{parentName:"h3"},"pushPalette")),(0,n.kt)("p",null,"Push the current color mapping and transparent colors list to the palettes stack."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-lua"},"pushPalette()\n")),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"poppalette"},(0,n.kt)("inlineCode",{parentName:"h3"},"popPalette")),(0,n.kt)("p",null,"Pop the last color mapping and transparent colors list from the palettes stack."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-lua"},"popPalette()\n")))}u.isMDXComponent=!0}}]);